male_plot<- ggplot(long_data[long_data$InfantSex == 'Male',], aes(x = Age, y = Value, color = Timepoint )) + geom_point() +
xlab(label = 'Maternal Age (yrs)') +
ylab(label = 'Glucose (mg/dL)') +
annotate('text', x = 41, y = max(long_data[long_data$InfantSex == 'Male',]$Value), label = 'Mean = 165, SD = 9 mg/dL', color = colorPalette[2], size = 3)+
annotate('text', x = 41, y = max(long_data[long_data$InfantSex == 'Male',]$Value) - 15, label = 'Mean = 85, SD = 6 mg/dL', color = colorPalette[1], size = 3) +
scale_color_manual(values = colorPalette)+
theme_classic() + theme(plot.title = element_text(hjust = 0.5)) + # adjusting the position of the title to be in the center
ggtitle('Mothers of Male infants') +
xlim(15, 45)
female_plot<- ggplot(long_data[long_data$InfantSex == 'Female',], aes(x = Age, y = Value, color = Timepoint )) + geom_point() +
xlab(label = 'Maternal Age (yrs)') +
ylab(label = 'Glucose (mg/dL)') +
annotate('text', x = 41, y = max(long_data[long_data$InfantSex == 'Female',]$Value), label = 'Mean = 155, SD = 9 mg/dL', color = colorPalette[2], size = 3)+
annotate('text', x = 41, y = max(long_data[long_data$InfantSex == 'Female',]$Value) - 15, label = 'Mean = 80, SD = 6 mg/dL', color = colorPalette[1], size = 3) +
scale_color_manual(values = colorPalette)+
theme_classic() + theme(plot.title = element_text(hjust = 0.5)) + # adjusting the position of the title to be in the center
ggtitle('Mothers of Female infants') +
xlim(15, 45)
ggpubr::ggarrange(male_plot, female_plot, nrow = 2, labels = c('A', 'B'))
ggpubr::ggarrange(male_plot, female_plot, nrow = 2, labels = c('A', 'B'))
wide_data
long_data
group_by(wide_data)
wide_data <- long_data %>%
pivot_wider(names_from = Timepoint, values_from = Diagnosis) +
group_by(wide_data)
wide_data <- long_data %>%
pivot_wider(names_from = Timepoint, values_from = Diagnosis) %>%
group_by(wide_data)
wide_data <- long_data %>% group_by(InfantSex)
library(dplyr)
wide_data <- long_data %>% group_by(InfantSex)
wide_data
wide_data <- long_data %>% group_by(InfantSex, Diagnosis)
wide_data
wide_data[0]
wide_data[1]
wide_data
summary(wide_data)
summary.table(wide_data)
knitr::opts_chunk$set(echo = TRUE)
longData %>%
tidyr::spread(key = BP.Type,value = BP) %>%
dplyr::mutate(MedicareAge = ifelse(Age >= 65,T,F)) %>%
dplyr::group_by(BiologicalSex,MedicareAge) %>%
dplyr::summarise(Mean.Age = mean(Age),Mean.Sys = mean(Systolic),Mean.Dias = mean(Diastolic))
longData %>%
tidyr::spread(key = Timepoint,value = Value) %>%
dplyr::group_by(InfantSex,Diagnosis) %>%
dplyr::summarise(Mean.Age = mean(Age),Mean.Sys = mean(Systolic),Mean.Dias = mean(Diastolic))
longData %>%
tidyr::spread(key = Timepoint,value = Value) %>%
dplyr::group_by(InfantSex,Diagnosis) %>%
dplyr::summarise(Mean.Age = mean(Age),Mean.Sys = mean(Systolic),Mean.Dias = mean(Diastolic))
long_data %>%
tidyr::spread(key = Timepoint,value = Value) %>%
dplyr::group_by(InfantSex,Diagnosis) %>%
dplyr::summarise(Mean.Age = mean(Age),Mean.Sys = mean(Systolic),Mean.Dias = mean(Diastolic))
long_data %>%
tidyr::spread(key = Timepoint,value = Value) %>%
dplyr::group_by(InfantSex,Diagnosis) %>%
dplyr::summarise(Mean.Age = mean(Age),Mean['One Hour'] = mean(Value))
long_data %>%
tidyr::spread(key = Timepoint,value = Value) %>%
dplyr::group_by(InfantSex,Diagnosis) %>%
dplyr::summarise(Mean.Age = mean(Age))
long_data %>%
tidyr::spread(key = Timepoint,value = Value) %>%
dplyr::group_by(InfantSex,Diagnosis) %>%
dplyr::summarise(Mean.Age = mean(Age), Mean.Fasting = mean(One Hour))
long_data %>%
tidyr::spread(key = Timepoint,value = Value) %>%
dplyr::group_by(InfantSex,Diagnosis) %>%
dplyr::summarise(Mean.Age = mean(Age), Mean.Fasting = mean(One Hour))
long_data %>%
tidyr::spread(key = Timepoint,value = Value) %>%
dplyr::group_by(InfantSex,Diagnosis) %>%
dplyr::summarise(Mean.Age = mean(Age), Mean.Fasting = mean(Baseline))
long_data %>%
tidyr::spread(key = Timepoint,value = Value) %>%
dplyr::group_by(InfantSex,Diagnosis) %>%
dplyr::summarise(Mean.Age = mean(Age), Mean.Fasting = mean(One\ Hour))
long_data %>%
tidyr::spread(key = Timepoint,value = Value) %>%
dplyr::group_by(InfantSex,Diagnosis) %>%
dplyr::summarise(Mean.Age = mean(Age), Mean.Fasting = mean(One Hour))
long_data %>%
tidyr::spread(key = Timepoint,value = Value) %>%
dplyr::group_by(InfantSex,Diagnosis) %>%
dplyr::summarise(Mean.Age = mean(Age), Mean.Fasting = mean(`One Hour`))
long_data %>%
tidyr::spread(key = Timepoint,value = Value) %>%
dplyr::group_by(InfantSex,Diagnosis) %>%
dplyr::summarise(Mean.Age = mean(Age), Mean.Fasting = mean(`One Hour`), sd.Fasting = sd(`One Hour`), Mean.Baseline = mean(Baseline), sd.Baseline = sd(Baseline) )
summary_table
summary_table <- long_data %>%
tidyr::spread(key = Timepoint,value = Value) %>%
dplyr::group_by(InfantSex,Diagnosis) %>%
dplyr::summarise(Mean.Age = mean(Age), Mean.Fasting = mean(`One Hour`), sd.Fasting = sd(`One Hour`), Mean.Baseline = mean(Baseline), sd.Baseline = sd(Baseline) )
summary_table
print(summary_table)
df$Glucose2 <- ifelse(df$InfantSex=='Female', rnorm(length(df[df$InfantSex == 'Female'], ), mean = 155, sd = 9), rnorm(length(df[df$InfantSex == 'Male'], ), mean = 165, sd = 9)) #
# 1.
set.seed(1000)
# set age and infant sex
df <- data.frame('Age' = trunc(runif(n = 10000, min = 18, max = 35 )),
'InfantSex' = rbinom(n = 10000, size = 1, prob = 0.5)
)
# rename infant sex to female and male
df$InfantSex <- factor(ifelse(df$InfantSex == 1, 'Female', 'Male'))
length(df[df$InfantSex == 'Female'], )
# rename infant sex to female and male
df$InfantSex <- factor(ifelse(df$InfantSex == 1, 'Female', 'Male'))
length(df[df$InfantSex == 'Female'], )
length(df[df$InfantSex == 'Female'])
length(df[df$InfantSex == 'Female'], )
length(df[df$InfantSex == 'Female'])
length(df[df$InfantSex == 'Female'][1])
length(df[df$InfantSex == 'Female'][0])
length(df$InfantSex == 'Female')
# set age and infant sex
df <- data.frame('Age' = trunc(runif(n = 10000, min = 18, max = 35 )),
'InfantSex' = rbinom(n = 10000, size = 1, prob = 0.5)
)
# rename infant sex to female and male
df$InfantSex <- factor(ifelse(df$InfantSex == 1, 'Female', 'Male'))
length(df$InfantSex == 'Female')
df$Glucose1 <- ifelse(df$InfantSex=='Female', rnorm(length(df[df$InfantSex == 'Female'], ), mean = 80, sd = 6), rnorm(length(df[df$InfantSex == 'Male'], ), mean = 85, sd = 6))
length(df$InfantSex == 'Female')
# set age and infant sex
df <- data.frame('Age' = trunc(runif(n = 10000, min = 18, max = 35 )),
'InfantSex' = rbinom(n = 10000, size = 1, prob = 0.5)
)
# rename infant sex to female and male
df$InfantSex <- factor(ifelse(df$InfantSex == 1, 'Female', 'Male'))
length(df$InfantSex == 'Female')
length(df[(df$InfantSex == 'Female') == TRUE])
length(df[(df$InfantSex == 'Female') == TRUE], )
# set the conditions for baseline and fasting for male and female
df[(df$InfantSex == 'Female')
# set the conditions for baseline and fasting for male and female
df[(df$InfantSex == 'Female')
# set the conditions for baseline and fasting for male and female
(df$InfantSex == 'Female')
# set the conditions for baseline and fasting for male and female
(df$InfantSex == 'Female')
# set the conditions for baseline and fasting for male and female
factor((df$InfantSex == 'Female'))
# set the conditions for baseline and fasting for male and female
table((df$InfantSex == 'Female'))
# set the conditions for baseline and fasting for male and female
table((df$InfantSex == 'Female') == TRUE)
# set the conditions for baseline and fasting for male and female
table((df$InfantSex == 'Female'))[0]
# set the conditions for baseline and fasting for male and female
table((df$InfantSex == 'Female'))[1]
# set the conditions for baseline and fasting for male and female
table((df$InfantSex == 'Female'))[2]
# set the conditions for baseline and fasting for male and female
table(df)
# set the conditions for baseline and fasting for male and female
summary(table((df$InfantSex == 'Female')))
# set the conditions for baseline and fasting for male and female
table(table((df$InfantSex == 'Female')))
# set the conditions for baseline and fasting for male and female
table(table((df$InfantSex == 'Female')))['Female']
# set the conditions for baseline and fasting for male and female
table(table((df$InfantSex == 'Female')))[True]
# set the conditions for baseline and fasting for male and female
sum(InfantSex == Female)
# set the conditions for baseline and fasting for male and female
sum(df$InfantSex == Female)
# set the conditions for baseline and fasting for male and female
sum(df$InfantSex == 'Female')
# create the box plot
ggplot(long_data, aes(x = Timepoint, y = Value)) +
geom_boxplot(aes(fill = Diagnosis)) +
scale_color_manual(values = colorPalette) +
theme_classic() +
scale_x_discrete(labels = c("Baseline", "One Hour")) +  # setting labels
xlab('Timepoint') +
ylab('Glucose (mg/dL)') +
labs(fill = 'GDM Diagnosis') # color based on diagnosis
df$Glucose2 <- ifelse(df$InfantSex=='Female', rnorm(sum(df$InfantSex == 'Female')), , mean = 155, sd = 9), rnorm(length(df[df$InfantSex == 'Male'], ), mean = 165, sd = 9)) #
df$Glucose2 <- ifelse(df$InfantSex=='Female', rnorm(sum(df$InfantSex == 'Female')), mean = 155, sd = 9), rnorm(length(df[df$InfantSex == 'Male'], ), mean = 165, sd = 9)) #
df$Glucose2 <- ifelse(df$InfantSex=='Female', rnorm(sum(df$InfantSex == 'Female')), mean = 155, sd = 9), rnorm(length(df[df$InfantSex == 'Male']), mean = 165, sd = 9)) #
df$Glucose2 <- ifelse(df$InfantSex=='Female', rnorm(sum(df$InfantSex == 'Female'), mean = 155, sd = 9), rnorm(sum(df$InfantSex == 'Male'), mean = 165, sd = 9)) #
# set the conditions for diagnosis
df$Diagnosis <- ifelse((df$Glucose1 > 95) | (df$Glucose2 > 180), 'Gesetational Diabetes', 'Healthy')
# set age and infant sex
df <- data.frame('Age' = trunc(runif(n = 10000, min = 18, max = 35 )),
'InfantSex' = rbinom(n = 10000, size = 1, prob = 0.5)
)
# rename infant sex to female and male
df$InfantSex <- factor(ifelse(df$InfantSex == 1, 'Female', 'Male'))
# set the conditions for baseline and fasting for male and female
sum(df$InfantSex == 'Female')
df$Glucose1 <- ifelse(df$InfantSex=='Female', rnorm(sum(df$InfantSex == 'Female'), mean = 80, sd = 6), rnorm(sum(df$InfantSex == 'Male'), mean = 85, sd = 6))
df$Glucose2 <- ifelse(df$InfantSex=='Female', rnorm(sum(df$InfantSex == 'Female'), mean = 155, sd = 9), rnorm(sum(df$InfantSex == 'Male'), mean = 165, sd = 9)) #
# set the conditions for diagnosis
df$Diagnosis <- ifelse((df$Glucose1 > 95) | (df$Glucose2 > 180), 'Gesetational Diabetes', 'Healthy')
# subset the data and print summary
male <- subset(df, InfantSex == 'Male')
female <- subset(df, InfantSex == 'Female')
print(summary(male))
print(summary(female))
df$Subject_ID <- seq(1, dim(df)[1]) # Assign the subject_ID which is required for the next questions
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(fill = InfantSex))
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(fill = InfantSex)
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(fill = InfantSex)
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(fill = 'InfantSex')
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(aes(fill = InfantSex))
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(aes(fill = InfantSex)) + scale_color_discrete(color = colorPalette)
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(aes(fill = InfantSex)) + scale_color_discrete(color = colorPalette)
colorPalette <- wesanderson::wes_palette('Moonrise3',n = 2)
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(aes(fill = InfantSex)) + scale_color_discrete(color = colorPalette)
colorPalette <- wesanderson::wes_palette('Moonrise4',n = 2)
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(aes(fill = InfantSex)) + scale_color_manual(color = colorPalette)
colorPalette <- wesanderson::wes_palette('Moonrise4',n = 2)
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(aes(fill = InfantSex)) + scale_color_manual(color = colorPalette)
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(aes(fill = InfantSex)) + scale_color_manual(values = colorPalette)
colorPalette <- wesanderson::wes_palette('Moonrise5',n = 2)
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(aes(fill = InfantSex)) + scale_color_manual(values = colorPalette)
colorPalette <- wesanderson::wes_palette('Moonrise5',n = 2)
colorPalette <- wesanderson::wes_palette('Moonrise1',n = 2)
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(aes(fill = InfantSex)) + scale_color_manual(values = colorPalette)
colorPalette <- wesanderson::wes_palette('Moonrise1',n = 10)
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(aes(fill = InfantSex)) + scale_color_manual(values = colorPalette)
colorPalette <- wesanderson::wes_palette('Moonrise1',n = 4)
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(aes(fill = InfantSex)) + scale_color_manual(values = colorPalette)
colorPalette <- harrypotter::harrypotter('slytherin',n = 4)
colorPalette <- harrypotter::harrypotter('Slytherin',n = 4)
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(aes(fill = InfantSex)) + scale_color_manual(values = colorPalette)
colorPalette <- harrypotter::harrypotter(house = 'Slytherin',n = 4)
ggplot(df, aes(x = Diagnosis, y = Glucose1)) + geom_boxplot(aes(fill = InfantSex)) + scale_color_manual(values = colorPalette)
ggplot(df, aes(x = Diagnosis, y = Glucose1)) +  scale_color_manual(values = colorPalette) + geom_boxplot(aes(fill = InfantSex)) +
```
ggplot(df, aes(x = Diagnosis, y = Glucose1)) +  scale_color_manual(values = colorPalette) + geom_boxplot(aes(fill = InfantSex))
ggplot(df, aes(x = Diagnosis, y = Glucose1)) +  scale_color_manual(values = colorPalette) + geom_boxplot()
es(fill = InfantSex
ggplot(df, aes(x = Diagnosis, y = Glucose1)) +  scale_color_manual(values = colorPalette) + geom_boxplot(aes(fill = InfantSex))
ggplot(df, aes(x = Diagnosis, y = Glucose1)) +   geom_boxplot(aes(fill = InfantSex)) + scale_color_manual(values = colorPalette)
library(harrypotter)
colorPalette <- harrypotter::harrypotter(house = 'Slytherin',n = 4)
ggplot(df, aes(x = Diagnosis, y = Glucose1)) +   geom_boxplot(aes(fill = InfantSex)) + scale_color_manual(values = colorPalette)
colorPalette
colorPalette <- harrypotter::harrypotter(house = 'Slytherin',n = 2)
colorPalette
ggplot(df, aes(x = Diagnosis, y = Glucose1)) +   geom_boxplot(aes(fill = InfantSex)) + scale_color_manual(values = colorPalette)
colorPalette0 <- harrypotter::harrypotter(house = 'Slytherin',n = 2)
colorPalette0
ggplot(df, aes(x = Diagnosis, y = Glucose1)) +   geom_boxplot(aes(fill = InfantSex)) + scale_color_manual(values = colorPalette0)
ggplot(df, aes(x = Diagnosis, y = Glucose1, fill = InfantSex)) +   geom_boxplot() + scale_color_manual(values = colorPalette0)
ggplot(df, aes(x = Diagnosis, y = Glucose1, color = InfantSex)) +   geom_boxplot() + scale_color_manual(values = colorPalette0)
ggplot(df, aes(x = Diagnosis, y = Glucose1, fill = InfantSex)) +   geom_boxplot() + scale_color_manual(values = colorPalette0)
ggplot(df, aes(x = Diagnosis, y = Glucose1, color = InfantSex)) +    scale_color_manual(values = colorPalette0) geom_boxplot() +
ggplot(df, aes(x = Diagnosis, y = Glucose1, color = InfantSex)) +    scale_color_manual(values = colorPalette0) geom_boxplot()
ggplot(df, aes(x = Diagnosis, y = Glucose1, fill = InfantSex)) +   scale_fill_manual(values = colorPalette0) geom_boxplot()
ggplot(df, aes(x = Diagnosis, y = Glucose1, fill = InfantSex)) +   scale_fill_manual(values = colorPalette0) + geom_boxplot()
# Convert to long data frame
long_data <- df %>%
tidyr::pivot_longer(cols = c(Glucose1,Glucose2),names_to = 'Timepoint', values_to = 'Value')
# Set Timepoint names
long_data$Timepoint <- ifelse(long_data$Timepoint == 'Glucose1', 'Baseline', 'One Hour')
# get a color palette
colorPalette <- wesanderson::wes_palette('Moonrise3',n = 2)
# print out subject 1
print(long_data[long_data$Subject_ID == 1, ])
# create the box plot
ggplot(long_data, aes(x = Timepoint, y = Value)) +
geom_boxplot(aes(fill = Diagnosis)) +
scale_color_manual(values = colorPalette) +
theme_classic() +
scale_x_discrete(labels = c("Baseline", "One Hour")) +  # setting labels
xlab('Timepoint') +
ylab('Glucose (mg/dL)') +
labs(fill = 'GDM Diagnosis') # color based on diagnosis
colorPalette <- wesanderson::wes_palette('Moonrise1',n = 2) # set a new color palette
# plot the scatter plot for all
ggplot(long_data, aes(x = Age, y = Value, color = Timepoint )) + geom_point() +
xlab(label = 'Maternal Age (yrs)') +
ylab(label = 'Glucose (mg/dL)') +
scale_color_manual(values = colorPalette)
male_plot<- ggplot(long_data[long_data$InfantSex == 'Male',], aes(x = Age, y = Value, color = Timepoint )) + geom_point() +
xlab(label = 'Maternal Age (yrs)') +
ylab(label = 'Glucose (mg/dL)') +
annotate('text', x = 41, y = max(long_data[long_data$InfantSex == 'Male',]$Value), label = 'Mean = 165, SD = 9 mg/dL', color = colorPalette[2], size = 3)+
annotate('text', x = 41, y = max(long_data[long_data$InfantSex == 'Male',]$Value) - 15, label = 'Mean = 85, SD = 6 mg/dL', color = colorPalette[1], size = 3) +
scale_color_manual(values = colorPalette)+
theme_classic() + theme(plot.title = element_text(hjust = 0.5)) + # adjusting the position of the title to be in the center
ggtitle('Mothers of Male infants') +
xlim(15, 45)
male_plot<- ggplot(long_data[long_data$InfantSex == 'Male',], aes(x = Age, y = Value, color = Timepoint )) + geom_point() +
xlab(label = 'Maternal Age (yrs)') +
ylab(label = 'Glucose (mg/dL)') +
annotate('text', x = 41, y = max(long_data[long_data$InfantSex == 'Male',]$Value), label = 'Mean = 165, SD = 9 mg/dL', color = colorPalette[2], size = 3)+
annotate('text', x = 41, y = max(long_data[long_data$InfantSex == 'Male',]$Value) - 15, label = 'Mean = 85, SD = 6 mg/dL', color = colorPalette[1], size = 3) +
scale_color_manual(values = colorPalette)+
theme_classic() + theme(plot.title = element_text(hjust = 0.5)) + # adjusting the position of the title to be in the center
ggtitle('Mothers of Male infants') +
xlim(15, 45)
female_plot<- ggplot(long_data[long_data$InfantSex == 'Female',], aes(x = Age, y = Value, color = Timepoint )) + geom_point() +
xlab(label = 'Maternal Age (yrs)') +
ylab(label = 'Glucose (mg/dL)') +
annotate('text', x = 41, y = max(long_data[long_data$InfantSex == 'Female',]$Value), label = 'Mean = 155, SD = 9 mg/dL', color = colorPalette[2], size = 3)+
annotate('text', x = 41, y = max(long_data[long_data$InfantSex == 'Female',]$Value) - 15, label = 'Mean = 80, SD = 6 mg/dL', color = colorPalette[1], size = 3) +
scale_color_manual(values = colorPalette)+
theme_classic() + theme(plot.title = element_text(hjust = 0.5)) + # adjusting the position of the title to be in the center
ggtitle('Mothers of Female infants') +
xlim(15, 45)
female_plot<- ggplot(long_data[long_data$InfantSex == 'Female',], aes(x = Age, y = Value, color = Timepoint )) + geom_point() +
xlab(label = 'Maternal Age (yrs)') +
ylab(label = 'Glucose (mg/dL)') +
annotate('text', x = 41, y = max(long_data[long_data$InfantSex == 'Female',]$Value), label = 'Mean = 155, SD = 9 mg/dL', color = colorPalette[2], size = 3)+
annotate('text', x = 41, y = max(long_data[long_data$InfantSex == 'Female',]$Value) - 15, label = 'Mean = 80, SD = 6 mg/dL', color = colorPalette[1], size = 3) +
scale_color_manual(values = colorPalette)+
theme_classic() + theme(plot.title = element_text(hjust = 0.5)) + # adjusting the position of the title to be in the center
ggtitle('Mothers of Female infants') +
xlim(15, 45)
ggpubr::ggarrange(male_plot, female_plot, nrow = 2, labels = c('A', 'B'))
summary_table <- long_data %>%
tidyr::spread(key = Timepoint,value = Value) %>%
dplyr::group_by(InfantSex,Diagnosis) %>%
dplyr::summarise(Mean.Age = mean(Age), Mean.Fasting = mean(`One Hour`), sd.Fasting = sd(`One Hour`), Mean.Baseline = mean(Baseline), sd.Baseline = sd(Baseline) )
print(summary_table)
summary_table <- long_data %>%
tidyr::spread(key = Timepoint,value = Value) %>%
dplyr::group_by(InfantSex,Diagnosis) %>%
dplyr::summarise(Mean.Age = mean(Age), Mean.1hr = mean(`One Hour`), sd.1hr = sd(`One Hour`), Mean.Baseline = mean(Baseline), sd.Baseline = sd(Baseline) )
print(summary_table)
series_matrix<- read.csv('./data/QBS103_GSE157103_series_matrix.csv')
genes <- read.csv('./data/QBS103_GSE157103_genes.csv')
```{r}
head(series_matrix)
unique(series_matrix$disease_status) # disease status is one categorical
unique(series_matrix$mechanical_ventilation) # another categorial
unique(series_matrix$age) # this one is covariate
# let's merge these two data sets together
new_df <- series_matrix[c('participant_id', 'disease_status', 'sex', 'age') ]
# get the genes. First column is just the name so slice from 2 onwards
# getting the 29th gene in the row
one_genes <- genes[29, 2:length(genes)]
# transpose and convert to dataframe
temp_df <- as.data.frame(t(one_genes))
colnames(temp_df) <- c('AATK')
# assign the new colunm to the new_df which has the variables we want
new_df$AATK<- temp_df$AATK
```{r}
library(ggplot2)
ggplot(new_df, aes(x = AATK)) + geom_histogram()
# creating a scatter point
ggplot(new_df, aes(x = age, y = AATK, color = disease_status)) +
geom_point() +
scale_x_discrete(breaks = seq(0, 100, by = 10))+
xlab('Age (yrs)') +
ylab('AATK')
# creating a scatter point
ggplot(new_df, aes(x = age, y = AATK, color = disease_status)) +
geom_point() +
scale_x_discrete(breaks = seq(0, 100, by = 10))+
xlab('Age (yrs)') +
ylab('AATK')
ggplot(new_df, aes(y = AATK, x = disease_status, fill = sex)) +
geom_boxplot() +
labs(x = "Disease Status ", y = "AATK Value")
ggplot(new_df, aes(y = AATK, x = disease_status, fill = sex)) +
geom_boxplot() +
labs(x = "Disease Status ", y = "AATK Value")
ggplot(new_df, aes(y = AATK, x = disease_status, fill = sex)) +
geom_boxplot() +
labs(x = "Disease Status ", y = "AATK Value")
# creating a scatter point
ggplot(new_df, aes(x = age, y = AATK, color = disease_status)) +
geom_point() +
scale_x_discrete(breaks = seq(0, 100, by = 10))+
xlab('Age (yrs)') +
ylab('AATK')
ggplot(new_df, aes(y = AATK, x = disease_status, fill = sex)) +
geom_boxplot() +
labs(x = "Disease Status ", y = "AATK Value")
library(rlang)
scatter <- ggplot(new_df, aes(x = !!sym(continuous_variable), y = !!sym(gene))) +
geom_point() +
xlab('Age (yrs)') +
ylab('AATK')
}
# This the continuous variables
# plots scatter
for (gene in list_of_genes){
scatter <- ggplot(new_df, aes(x = !!sym(continuous_variable), y = !!sym(gene))) +
geom_point() +
xlab('Age (yrs)') +
ylab('AATK')
# # this is for the two categorical variables
# # plot the box plot
# box <- ggplot(new_df, aes(y = AATK, x = disease_status, fill = sex)) +
#   geom_boxplot() +
#   labs(x = "Disease Status ", y = "AATK Value")
#
# # plot the histogram
# histo <- ggplot(new_df, aes(x = AATK)) +
# geom_histogram() +
# theme_classic()
return(list(scatter))
}
# This the continuous variables
# plots scatter
for (gene in list_of_genes){
scatter <- ggplot(new_df, aes(x = !!sym(continuous_variable), y = !!sym(gene))) +
geom_point() +
xlab('Age (yrs)') +
ylab('AATK')
# # this is for the two categorical variables
# # plot the box plot
# box <- ggplot(new_df, aes(y = AATK, x = disease_status, fill = sex)) +
#   geom_boxplot() +
#   labs(x = "Disease Status ", y = "AATK Value")
#
# # plot the histogram
# histo <- ggplot(new_df, aes(x = AATK)) +
# geom_histogram() +
# theme_classic()
return(list(scatter))
}
a <- function(dataframe, list_of_genes, continuous_variable, categorical_covariates)
{
# This the continuous variables
# plots scatter
for (gene in list_of_genes){
scatter <- ggplot(new_df, aes(x = !!sym(continuous_variable), y = !!sym(gene))) +
geom_point() +
xlab('Age (yrs)') +
ylab('AATK')
# # this is for the two categorical variables
# # plot the box plot
# box <- ggplot(new_df, aes(y = AATK, x = disease_status, fill = sex)) +
#   geom_boxplot() +
#   labs(x = "Disease Status ", y = "AATK Value")
#
# # plot the histogram
# histo <- ggplot(new_df, aes(x = AATK)) +
# geom_histogram() +
# theme_classic()
return(list(scatter))
}
}
a(prepare_dataframe(series_matrix, genes), list(c('AATK')), 'age', list('disease_status', 'sex'))
library(ggplot2)
a(prepare_dataframe(series_matrix, genes), list(c('AATK')), 'age', list('disease_status', 'sex'))
a(prepare_dataframe(series_matrix, genes), list(c('AATK', 'A1BC')), 'age', list('disease_status', 'sex'))
genes
a(prepare_dataframe(series_matrix, genes), list(c('AATK', 'A1CF')), 'age', list('disease_status', 'sex'))
a <- function(dataframe, list_of_genes, continuous_variable, categorical_covariates)
{
# This the continuous variables
# plots scatter
for (gene in list_of_genes){
scatter <- ggplot(new_df, aes(x = !!sym(continuous_variable), y = !!sym(gene))) +
geom_point() +
xlab('Age (yrs)') +
ylab('AATK')
# # this is for the two categorical variables
# # plot the box plot
# box <- ggplot(new_df, aes(y = AATK, x = disease_status, fill = sex)) +
#   geom_boxplot() +
#   labs(x = "Disease Status ", y = "AATK Value")
#
# # plot the histogram
# histo <- ggplot(new_df, aes(x = AATK)) +
# geom_histogram() +
# theme_classic()
return(list(scatter))
}
}
a(prepare_dataframe(series_matrix, genes), list(c('AATK', 'A1CF')), 'age', list('disease_status', 'sex'))
print(gene)
a <- function(dataframe, list_of_genes, continuous_variable, categorical_covariates)
{
# This the continuous variables
# plots scatter
for (gene in list_of_genes){
print(gene)
scatter <- ggplot(new_df, aes(x = !!sym(continuous_variable), y = !!sym(gene))) +
geom_point() +
xlab('Age (yrs)') +
ylab('AATK')
# # this is for the two categorical variables
# # plot the box plot
# box <- ggplot(new_df, aes(y = AATK, x = disease_status, fill = sex)) +
#   geom_boxplot() +
#   labs(x = "Disease Status ", y = "AATK Value")
#
# # plot the histogram
# histo <- ggplot(new_df, aes(x = AATK)) +
# geom_histogram() +
# theme_classic()
return(list(scatter))
}
}
a(prepare_dataframe(series_matrix, genes), list(c('AATK', 'A1CF')), 'age', list('disease_status', 'sex'))
}
}
a <- function(dataframe, list_of_genes, continuous_variable, categorical_covariates)
{
# This the continuous variables
# plots scatter
for (gene in list_of_genes){
print(gene)
scatter <- ggplot(new_df, aes(x = !!sym(continuous_variable), y = gene)) +
geom_point() +
xlab('Age (yrs)') +
ylab('AATK')
